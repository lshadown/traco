 void zuker_pluto2(){
     int t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
 int lb, ub, lbp, ubp, lb2, ub2;
 register int lbv, ubv;
/* Start of CLooG code */
if (N >= 2) {
  for (t2=max(-1,ceild(-N-5,8));t2<=floord(N-1,8);t2++) {
    lbp=max(0,t2);
    ubp=min(floord(N-1,8),floord(8*t2+N+5,8));
#pragma omp parallel for private(lbv,ubv,t5,t6,t7,t8,t9,t10,t11,t12)
    for (t4=lbp;t4<=ubp;t4++) {
      if ((t2 <= floord(8*t4-N+2,8)) && (t4 >= ceild(N-5,8))) {
        V[(N-2)][(N-1)] = MIN( MIN (V[(N-2)+1][(N-1)-1], EHF[(N-2)][(N-1)]), V[(N-2)][(N-1)]);;
        W[(N-2)][(N-1)] = MIN( MIN ( MIN ( W[(N-2)+1][(N-1)], W[(N-2)][(N-1)-1]), V[(N-2)][(N-1)]), W[(N-2)][(N-1)]);;
      }
      if ((t2 == -1) && (8*t4 == N-6)) {
        if ((N+2)%8 == 0) {
          V[(N-2)][(N-1)] = MIN( MIN (V[(N-2)+1][(N-1)-1], EHF[(N-2)][(N-1)]), V[(N-2)][(N-1)]);;
          W[(N-2)][(N-1)] = MIN( MIN ( MIN ( W[(N-2)+1][(N-1)], W[(N-2)][(N-1)-1]), V[(N-2)][(N-1)]), W[(N-2)][(N-1)]);;
        }
      }
      if ((t2 == -1) && (8*t4 == N-7)) {
        if ((N+1)%8 == 0) {
          V[(N-2)][(N-1)] = MIN( MIN (V[(N-2)+1][(N-1)-1], EHF[(N-2)][(N-1)]), V[(N-2)][(N-1)]);;
          W[(N-2)][(N-1)] = MIN( MIN ( MIN ( W[(N-2)+1][(N-1)], W[(N-2)][(N-1)-1]), V[(N-2)][(N-1)]), W[(N-2)][(N-1)]);;
        }
      }
      if ((t2 == -1) && (t4 <= floord(N-8,8))) {
        V[(8*t4+6)][(8*t4+7)] = MIN( MIN (V[(8*t4+6)+1][(8*t4+7)-1], EHF[(8*t4+6)][(8*t4+7)]), V[(8*t4+6)][(8*t4+7)]);;
        W[(8*t4+6)][(8*t4+7)] = MIN( MIN ( MIN ( W[(8*t4+6)+1][(8*t4+7)], W[(8*t4+6)][(8*t4+7)-1]), V[(8*t4+6)][(8*t4+7)]), W[(8*t4+6)][(8*t4+7)]);;
      }
      if ((N >= 3) && (t2 <= floord(8*t4-N+3,8)) && (t2 >= ceild(8*t4-N-4,8)) && (t4 <= floord(N-2,8)) && (t4 >= ceild(N-6,8))) {
        V[(N-3)][(N-2)] = MIN( MIN (V[(N-3)+1][(N-2)-1], EHF[(N-3)][(N-2)]), V[(N-3)][(N-2)]);;
        W[(N-3)][(N-2)] = MIN( MIN ( MIN ( W[(N-3)+1][(N-2)], W[(N-3)][(N-2)-1]), V[(N-3)][(N-2)]), W[(N-3)][(N-2)]);;
        W[(N-3)][(N-1)] += MIN ( MIN(W[(N-3)][(N-2)], W[(N-2)+1][(N-1)]), W[(N-3)][(N-1)]);;
        V[(N-3)][(N-1)] = MIN( MIN (V[(N-3)+1][(N-1)-1], EHF[(N-3)][(N-1)]), V[(N-3)][(N-1)]);;
        W[(N-3)][(N-1)] = MIN( MIN ( MIN ( W[(N-3)+1][(N-1)], W[(N-3)][(N-1)-1]), V[(N-3)][(N-1)]), W[(N-3)][(N-1)]);;
      }
      if ((t2 == 0) && (8*t4 == N-1)) {
        if ((N+7)%8 == 0) {
          W[(N-3)][(N-1)] += MIN ( MIN(W[(N-3)][(N-2)], W[(N-2)+1][(N-1)]), W[(N-3)][(N-1)]);;
        }
        if ((N+7)%8 == 0) {
          V[(N-3)][(N-1)] = MIN( MIN (V[(N-3)+1][(N-1)-1], EHF[(N-3)][(N-1)]), V[(N-3)][(N-1)]);;
          W[(N-3)][(N-1)] = MIN( MIN ( MIN ( W[(N-3)+1][(N-1)], W[(N-3)][(N-1)-1]), V[(N-3)][(N-1)]), W[(N-3)][(N-1)]);;
        }
      }
      if ((t2 == -1) && (8*t4 == N-7)) {
        if ((N+1)%8 == 0) {
          V[(N-3)][(N-2)] = MIN( MIN (V[(N-3)+1][(N-2)-1], EHF[(N-3)][(N-2)]), V[(N-3)][(N-2)]);;
          W[(N-3)][(N-2)] = MIN( MIN ( MIN ( W[(N-3)+1][(N-2)], W[(N-3)][(N-2)-1]), V[(N-3)][(N-2)]), W[(N-3)][(N-2)]);;
        }
        if ((N+1)%8 == 0) {
          W[(N-3)][(N-1)] += MIN ( MIN(W[(N-3)][(N-2)], W[(N-2)+1][(N-1)]), W[(N-3)][(N-1)]);;
        }
        if ((N+1)%8 == 0) {
          V[(N-3)][(N-1)] = MIN( MIN (V[(N-3)+1][(N-1)-1], EHF[(N-3)][(N-1)]), V[(N-3)][(N-1)]);;
          W[(N-3)][(N-1)] = MIN( MIN ( MIN ( W[(N-3)+1][(N-1)], W[(N-3)][(N-1)-1]), V[(N-3)][(N-1)]), W[(N-3)][(N-1)]);;
        }
      }
      if ((t2 == -1) && (t4 <= floord(N-8,8))) {
        V[(8*t4+5)][(8*t4+6)] = MIN( MIN (V[(8*t4+5)+1][(8*t4+6)-1], EHF[(8*t4+5)][(8*t4+6)]), V[(8*t4+5)][(8*t4+6)]);;
        W[(8*t4+5)][(8*t4+6)] = MIN( MIN ( MIN ( W[(8*t4+5)+1][(8*t4+6)], W[(8*t4+5)][(8*t4+6)-1]), V[(8*t4+5)][(8*t4+6)]), W[(8*t4+5)][(8*t4+6)]);;
        W[(8*t4+5)][(8*t4+7)] += MIN ( MIN(W[(8*t4+5)][(8*t4+6)], W[(8*t4+6)+1][(8*t4+7)]), W[(8*t4+5)][(8*t4+7)]);;
        V[(8*t4+5)][(8*t4+7)] = MIN( MIN (V[(8*t4+5)+1][(8*t4+7)-1], EHF[(8*t4+5)][(8*t4+7)]), V[(8*t4+5)][(8*t4+7)]);;
        W[(8*t4+5)][(8*t4+7)] = MIN( MIN ( MIN ( W[(8*t4+5)+1][(8*t4+7)], W[(8*t4+5)][(8*t4+7)-1]), V[(8*t4+5)][(8*t4+7)]), W[(8*t4+5)][(8*t4+7)]);;
      }
      if ((N >= 4) && (t2 <= floord(8*t4-N+4,8)) && (t2 >= ceild(8*t4-N-3,8)) && (t4 <= floord(N-3,8)) && (t4 >= ceild(N-7,8))) {
        V[(N-4)][(N-3)] = MIN( MIN (V[(N-4)+1][(N-3)-1], EHF[(N-4)][(N-3)]), V[(N-4)][(N-3)]);;
        W[(N-4)][(N-3)] = MIN( MIN ( MIN ( W[(N-4)+1][(N-3)], W[(N-4)][(N-3)-1]), V[(N-4)][(N-3)]), W[(N-4)][(N-3)]);;
        W[(N-4)][(N-2)] += MIN ( MIN(W[(N-4)][(N-3)], W[(N-3)+1][(N-2)]), W[(N-4)][(N-2)]);;
        V[(N-4)][(N-2)] = MIN( MIN (V[(N-4)+1][(N-2)-1], EHF[(N-4)][(N-2)]), V[(N-4)][(N-2)]);;
        W[(N-4)][(N-2)] = MIN( MIN ( MIN ( W[(N-4)+1][(N-2)], W[(N-4)][(N-2)-1]), V[(N-4)][(N-2)]), W[(N-4)][(N-2)]);;
        W[(N-4)][(N-1)] += MIN ( MIN(W[(N-4)][(N-3)], W[(N-3)+1][(N-1)]), W[(N-4)][(N-1)]);;
        V[(N-4)][(N-1)] = MIN(W[(N-4)+1][(N-3)] + W[(N-3)+1][(N-1)-1], V[(N-4)][(N-1)]);;
        W[(N-4)][(N-1)] += MIN ( MIN(W[(N-4)][(N-2)], W[(N-2)+1][(N-1)]), W[(N-4)][(N-1)]);;
        V[(N-4)][(N-1)] = MIN( MIN (V[(N-4)+1][(N-1)-1], EHF[(N-4)][(N-1)]), V[(N-4)][(N-1)]);;
        W[(N-4)][(N-1)] = MIN( MIN ( MIN ( W[(N-4)+1][(N-1)], W[(N-4)][(N-1)-1]), V[(N-4)][(N-1)]), W[(N-4)][(N-1)]);;
      }
      if ((N >= 10) && (t2 == 0) && (8*t4 == N-2)) {
        if ((N+6)%8 == 0) {
          W[(N-4)][(N-2)] += MIN ( MIN(W[(N-4)][(N-3)], W[(N-3)+1][(N-2)]), W[(N-4)][(N-2)]);;
        }
        if ((N+6)%8 == 0) {
          V[(N-4)][(N-2)] = MIN( MIN (V[(N-4)+1][(N-2)-1], EHF[(N-4)][(N-2)]), V[(N-4)][(N-2)]);;
          W[(N-4)][(N-2)] = MIN( MIN ( MIN ( W[(N-4)+1][(N-2)], W[(N-4)][(N-2)-1]), V[(N-4)][(N-2)]), W[(N-4)][(N-2)]);;
        }
        if ((N+6)%8 == 0) {
          W[(N-4)][(N-1)] += MIN ( MIN(W[(N-4)][(N-3)], W[(N-3)+1][(N-1)]), W[(N-4)][(N-1)]);;
        }
        if ((N+6)%8 == 0) {
          V[(N-4)][(N-1)] = MIN(W[(N-4)+1][(N-3)] + W[(N-3)+1][(N-1)-1], V[(N-4)][(N-1)]);;
        }
        if ((N+6)%8 == 0) {
          W[(N-4)][(N-1)] += MIN ( MIN(W[(N-4)][(N-2)], W[(N-2)+1][(N-1)]), W[(N-4)][(N-1)]);;
        }
        if ((N+6)%8 == 0) {
          V[(N-4)][(N-1)] = MIN( MIN (V[(N-4)+1][(N-1)-1], EHF[(N-4)][(N-1)]), V[(N-4)][(N-1)]);;
          W[(N-4)][(N-1)] = MIN( MIN ( MIN ( W[(N-4)+1][(N-1)], W[(N-4)][(N-1)-1]), V[(N-4)][(N-1)]), W[(N-4)][(N-1)]);;
        }
      }
      if ((t2 == 0) && (8*t4 == N-1)) {
        if ((N+7)%8 == 0) {
          W[(N-4)][(N-1)] += MIN ( MIN(W[(N-4)][(N-3)], W[(N-3)+1][(N-1)]), W[(N-4)][(N-1)]);;
        }
        if ((N+7)%8 == 0) {
          V[(N-4)][(N-1)] = MIN(W[(N-4)+1][(N-3)] + W[(N-3)+1][(N-1)-1], V[(N-4)][(N-1)]);;
        }
        if ((N+7)%8 == 0) {
          W[(N-4)][(N-1)] += MIN ( MIN(W[(N-4)][(N-2)], W[(N-2)+1][(N-1)]), W[(N-4)][(N-1)]);;
        }
        if ((N+7)%8 == 0) {
          V[(N-4)][(N-1)] = MIN( MIN (V[(N-4)+1][(N-1)-1], EHF[(N-4)][(N-1)]), V[(N-4)][(N-1)]);;
          W[(N-4)][(N-1)] = MIN( MIN ( MIN ( W[(N-4)+1][(N-1)], W[(N-4)][(N-1)-1]), V[(N-4)][(N-1)]), W[(N-4)][(N-1)]);;
        }
      }
      if ((t2 == -1) && (t4 <= floord(N-8,8))) {
        V[(8*t4+4)][(8*t4+5)] = MIN( MIN (V[(8*t4+4)+1][(8*t4+5)-1], EHF[(8*t4+4)][(8*t4+5)]), V[(8*t4+4)][(8*t4+5)]);;
        W[(8*t4+4)][(8*t4+5)] = MIN( MIN ( MIN ( W[(8*t4+4)+1][(8*t4+5)], W[(8*t4+4)][(8*t4+5)-1]), V[(8*t4+4)][(8*t4+5)]), W[(8*t4+4)][(8*t4+5)]);;
        W[(8*t4+4)][(8*t4+6)] += MIN ( MIN(W[(8*t4+4)][(8*t4+5)], W[(8*t4+5)+1][(8*t4+6)]), W[(8*t4+4)][(8*t4+6)]);;
        V[(8*t4+4)][(8*t4+6)] = MIN( MIN (V[(8*t4+4)+1][(8*t4+6)-1], EHF[(8*t4+4)][(8*t4+6)]), V[(8*t4+4)][(8*t4+6)]);;
        W[(8*t4+4)][(8*t4+6)] = MIN( MIN ( MIN ( W[(8*t4+4)+1][(8*t4+6)], W[(8*t4+4)][(8*t4+6)-1]), V[(8*t4+4)][(8*t4+6)]), W[(8*t4+4)][(8*t4+6)]);;
        W[(8*t4+4)][(8*t4+7)] += MIN ( MIN(W[(8*t4+4)][(8*t4+5)], W[(8*t4+5)+1][(8*t4+7)]), W[(8*t4+4)][(8*t4+7)]);;
        V[(8*t4+4)][(8*t4+7)] = MIN(W[(8*t4+4)+1][(8*t4+5)] + W[(8*t4+5)+1][(8*t4+7)-1], V[(8*t4+4)][(8*t4+7)]);;
        W[(8*t4+4)][(8*t4+7)] += MIN ( MIN(W[(8*t4+4)][(8*t4+6)], W[(8*t4+6)+1][(8*t4+7)]), W[(8*t4+4)][(8*t4+7)]);;
        V[(8*t4+4)][(8*t4+7)] = MIN( MIN (V[(8*t4+4)+1][(8*t4+7)-1], EHF[(8*t4+4)][(8*t4+7)]), V[(8*t4+4)][(8*t4+7)]);;
        W[(8*t4+4)][(8*t4+7)] = MIN( MIN ( MIN ( W[(8*t4+4)+1][(8*t4+7)], W[(8*t4+4)][(8*t4+7)-1]), V[(8*t4+4)][(8*t4+7)]), W[(8*t4+4)][(8*t4+7)]);;
      }
      for (t5=max(max(-N+5,8*t2-8*t4),-8*t4-3);t5<=min(min(0,-8*t4+1),8*t2-8*t4+7);t5++) {
        V[-t5][(-t5+1)] = MIN( MIN (V[-t5+1][(-t5+1)-1], EHF[-t5][(-t5+1)]), V[-t5][(-t5+1)]);;
        W[-t5][(-t5+1)] = MIN( MIN ( MIN ( W[-t5+1][(-t5+1)], W[-t5][(-t5+1)-1]), V[-t5][(-t5+1)]), W[-t5][(-t5+1)]);;
        W[-t5][(-t5+2)] += MIN ( MIN(W[-t5][(-t5+1)], W[(-t5+1)+1][(-t5+2)]), W[-t5][(-t5+2)]);;
        V[-t5][(-t5+2)] = MIN( MIN (V[-t5+1][(-t5+2)-1], EHF[-t5][(-t5+2)]), V[-t5][(-t5+2)]);;
        W[-t5][(-t5+2)] = MIN( MIN ( MIN ( W[-t5+1][(-t5+2)], W[-t5][(-t5+2)-1]), V[-t5][(-t5+2)]), W[-t5][(-t5+2)]);;
        W[-t5][(-t5+3)] += MIN ( MIN(W[-t5][(-t5+1)], W[(-t5+1)+1][(-t5+3)]), W[-t5][(-t5+3)]);;
        V[-t5][(-t5+3)] = MIN(W[-t5+1][(-t5+1)] + W[(-t5+1)+1][(-t5+3)-1], V[-t5][(-t5+3)]);;
        W[-t5][(-t5+3)] += MIN ( MIN(W[-t5][(-t5+2)], W[(-t5+2)+1][(-t5+3)]), W[-t5][(-t5+3)]);;
        V[-t5][(-t5+3)] = MIN( MIN (V[-t5+1][(-t5+3)-1], EHF[-t5][(-t5+3)]), V[-t5][(-t5+3)]);;
        W[-t5][(-t5+3)] = MIN( MIN ( MIN ( W[-t5+1][(-t5+3)], W[-t5][(-t5+3)-1]), V[-t5][(-t5+3)]), W[-t5][(-t5+3)]);;
        for (t7=-t5+4;t7<=min(N-1,8*t4+7);t7++) {
          for (t9=-t5+1;t9<=t7-2;t9++) {
            for (t11=t9+1;t11<=min(t7-1,t5+t7+t9-3);t11++) {
              V[-t5][t7] = MIN(V[t9][t11] + EFL[-t5][t7], V[-t5][t7]);;
            }
            W[-t5][t7] += MIN ( MIN(W[-t5][t9], W[t9+1][t7]), W[-t5][t7]);;
            V[-t5][t7] = MIN(W[-t5+1][t9] + W[t9+1][t7-1], V[-t5][t7]);;
          }
          W[-t5][t7] += MIN ( MIN(W[-t5][(t7-1)], W[(t7-1)+1][t7]), W[-t5][t7]);;
          V[-t5][t7] = MIN( MIN (V[-t5+1][t7-1], EHF[-t5][t7]), V[-t5][t7]);;
          W[-t5][t7] = MIN( MIN ( MIN ( W[-t5+1][t7], W[-t5][t7-1]), V[-t5][t7]), W[-t5][t7]);;
        }
      }
      if ((t2 == 0) && (t4 >= 1) && (t4 <= floord(N-3,8))) {
        W[(8*t4-2)][8*t4] += MIN ( MIN(W[(8*t4-2)][(8*t4-1)], W[(8*t4-1)+1][8*t4]), W[(8*t4-2)][8*t4]);;
        V[(8*t4-2)][8*t4] = MIN( MIN (V[(8*t4-2)+1][8*t4-1], EHF[(8*t4-2)][8*t4]), V[(8*t4-2)][8*t4]);;
        W[(8*t4-2)][8*t4] = MIN( MIN ( MIN ( W[(8*t4-2)+1][8*t4], W[(8*t4-2)][8*t4-1]), V[(8*t4-2)][8*t4]), W[(8*t4-2)][8*t4]);;
        W[(8*t4-2)][(8*t4+1)] += MIN ( MIN(W[(8*t4-2)][(8*t4-1)], W[(8*t4-1)+1][(8*t4+1)]), W[(8*t4-2)][(8*t4+1)]);;
        V[(8*t4-2)][(8*t4+1)] = MIN(W[(8*t4-2)+1][(8*t4-1)] + W[(8*t4-1)+1][(8*t4+1)-1], V[(8*t4-2)][(8*t4+1)]);;
        W[(8*t4-2)][(8*t4+1)] += MIN ( MIN(W[(8*t4-2)][8*t4], W[8*t4+1][(8*t4+1)]), W[(8*t4-2)][(8*t4+1)]);;
        V[(8*t4-2)][(8*t4+1)] = MIN( MIN (V[(8*t4-2)+1][(8*t4+1)-1], EHF[(8*t4-2)][(8*t4+1)]), V[(8*t4-2)][(8*t4+1)]);;
        W[(8*t4-2)][(8*t4+1)] = MIN( MIN ( MIN ( W[(8*t4-2)+1][(8*t4+1)], W[(8*t4-2)][(8*t4+1)-1]), V[(8*t4-2)][(8*t4+1)]), W[(8*t4-2)][(8*t4+1)]);;
        for (t7=8*t4+2;t7<=min(N-1,8*t4+7);t7++) {
          for (t9=8*t4-1;t9<=t7-2;t9++) {
            for (t11=t9+1;t11<=min(t7-1,-8*t4+t7+t9-1);t11++) {
              V[(8*t4-2)][t7] = MIN(V[t9][t11] + EFL[(8*t4-2)][t7], V[(8*t4-2)][t7]);;
            }
            W[(8*t4-2)][t7] += MIN ( MIN(W[(8*t4-2)][t9], W[t9+1][t7]), W[(8*t4-2)][t7]);;
            V[(8*t4-2)][t7] = MIN(W[(8*t4-2)+1][t9] + W[t9+1][t7-1], V[(8*t4-2)][t7]);;
          }
          W[(8*t4-2)][t7] += MIN ( MIN(W[(8*t4-2)][(t7-1)], W[(t7-1)+1][t7]), W[(8*t4-2)][t7]);;
          V[(8*t4-2)][t7] = MIN( MIN (V[(8*t4-2)+1][t7-1], EHF[(8*t4-2)][t7]), V[(8*t4-2)][t7]);;
          W[(8*t4-2)][t7] = MIN( MIN ( MIN ( W[(8*t4-2)+1][t7], W[(8*t4-2)][t7-1]), V[(8*t4-2)][t7]), W[(8*t4-2)][t7]);;
        }
      }
      if ((t2 == 0) && (t4 >= 1) && (t4 <= floord(N-2,8))) {
        W[(8*t4-3)][8*t4] += MIN ( MIN(W[(8*t4-3)][(8*t4-2)], W[(8*t4-2)+1][8*t4]), W[(8*t4-3)][8*t4]);;
        V[(8*t4-3)][8*t4] = MIN(W[(8*t4-3)+1][(8*t4-2)] + W[(8*t4-2)+1][8*t4-1], V[(8*t4-3)][8*t4]);;
        W[(8*t4-3)][8*t4] += MIN ( MIN(W[(8*t4-3)][(8*t4-1)], W[(8*t4-1)+1][8*t4]), W[(8*t4-3)][8*t4]);;
        V[(8*t4-3)][8*t4] = MIN( MIN (V[(8*t4-3)+1][8*t4-1], EHF[(8*t4-3)][8*t4]), V[(8*t4-3)][8*t4]);;
        W[(8*t4-3)][8*t4] = MIN( MIN ( MIN ( W[(8*t4-3)+1][8*t4], W[(8*t4-3)][8*t4-1]), V[(8*t4-3)][8*t4]), W[(8*t4-3)][8*t4]);;
        for (t7=8*t4+1;t7<=min(N-1,8*t4+7);t7++) {
          for (t9=8*t4-2;t9<=t7-2;t9++) {
            for (t11=t9+1;t11<=min(t7-1,-8*t4+t7+t9);t11++) {
              V[(8*t4-3)][t7] = MIN(V[t9][t11] + EFL[(8*t4-3)][t7], V[(8*t4-3)][t7]);;
            }
            W[(8*t4-3)][t7] += MIN ( MIN(W[(8*t4-3)][t9], W[t9+1][t7]), W[(8*t4-3)][t7]);;
            V[(8*t4-3)][t7] = MIN(W[(8*t4-3)+1][t9] + W[t9+1][t7-1], V[(8*t4-3)][t7]);;
          }
          W[(8*t4-3)][t7] += MIN ( MIN(W[(8*t4-3)][(t7-1)], W[(t7-1)+1][t7]), W[(8*t4-3)][t7]);;
          V[(8*t4-3)][t7] = MIN( MIN (V[(8*t4-3)+1][t7-1], EHF[(8*t4-3)][t7]), V[(8*t4-3)][t7]);;
          W[(8*t4-3)][t7] = MIN( MIN ( MIN ( W[(8*t4-3)+1][t7], W[(8*t4-3)][t7-1]), V[(8*t4-3)][t7]), W[(8*t4-3)][t7]);;
        }
      }
      for (t5=max(8*t2-8*t4,-8*t4+4);t5<=min(0,8*t2-8*t4+7);t5++) {
        for (t7=8*t4;t7<=min(N-1,8*t4+7);t7++) {
          for (t9=-t5+1;t9<=t7-2;t9++) {
            for (t11=t9+1;t11<=min(t7-1,t5+t7+t9-3);t11++) {
              V[-t5][t7] = MIN(V[t9][t11] + EFL[-t5][t7], V[-t5][t7]);;
            }
            W[-t5][t7] += MIN ( MIN(W[-t5][t9], W[t9+1][t7]), W[-t5][t7]);;
            V[-t5][t7] = MIN(W[-t5+1][t9] + W[t9+1][t7-1], V[-t5][t7]);;
          }
          W[-t5][t7] += MIN ( MIN(W[-t5][(t7-1)], W[(t7-1)+1][t7]), W[-t5][t7]);;
          V[-t5][t7] = MIN( MIN (V[-t5+1][t7-1], EHF[-t5][t7]), V[-t5][t7]);;
          W[-t5][t7] = MIN( MIN ( MIN ( W[-t5+1][t7], W[-t5][t7-1]), V[-t5][t7]), W[-t5][t7]);;
        }
      }
    }
  }
}
/* End of CLooG code */
}
